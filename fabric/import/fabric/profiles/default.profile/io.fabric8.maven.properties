#
#  Copyright 2005-2014 Red Hat, Inc.
#
#  Red Hat licenses this file to you under the Apache License, version
#  2.0 (the "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#  implied.  See the License for the specific language governing
#  permissions and limitations under the License.
#

# Default this to false -
# do not add https://repo1.maven.org/maven2@id=central in "fallback" profile used in Aether resolver
io.fabric8.maven.useFallbackRepositories = false

# list of repositories searched in the first place, should contain ${runtime.home}/${karaf.default.repository}
# each of these repositories is checked by aether as "local repository". if artifact isn't found, "repositories"
# are searched next
io.fabric8.maven.defaultRepositories = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.defaultRepositories}

# Make sure that parts that are using pax-url have visibility to the location where the agent downloads artifacts.
# This is not added to the agent configuration, since it would break SNAPSHOTS
# list of repositories searched after resolution fails for "defaultRepositories". These are true remote repositories
# accessed using maven/aether/wagon mechanisms. If any repository contains required artifact, it is then written
# to "localRepository"
# if this list is _prepended_ with '+' sign, all repositories from active profiles defined in effective settings.xml
# file will be _appended_ to_ this list
io.fabric8.maven.repositories = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.repositories}

# leaving this option commented makes the system dependent on external configuration, which is not always desired
# "localRepository" is the target location for artifacts downloaded from "remote repositories", it's not
# searched for already available artifacts, unless added explicitly to "defaultRepositories"
# by default internal local repository is used to have behavior independent of the content of ~/.m2/repository
io.fabric8.maven.localRepository = ${karaf.data}/repository

# if this option is set to true, non-SNAPSHOT artifacts may be redownloaded according to policy.
# if "always" update policy is used, artifacts are redownloaded even if normally locally available version
# would be used
org.ops4j.pax.url.mvn.repositories.updateReleases = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.updateReleases}

# explicit reference to settings.xml file. Properties prefixed with "io.fabric8.maven." have
# higher priority except <proxies> element. HTTP proxies should be configured in settings file
io.fabric8.maven.settings = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.settings}
io.fabric8.maven.security = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.security}

io.fabric8.maven.globalUpdatePolicy = always
io.fabric8.maven.globalChecksumPolicy = warn

#
# socket and connection configuration
#
# default value for connection and read timeouts, when socket.readTimeout and socket.connectionTimeout
# are not specified
io.fabric8.maven.timeout = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.timeout}
# timeout in ms when establishing http connection during artifact resolution
io.fabric8.maven.socket.connectionTimeout = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.socket.connectionTimeout}
# timeout in ms when reading data after connecting to remote repository
io.fabric8.maven.socket.readTimeout = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.socket.readTimeout}
# SO_KEEPALIVE option for sockets, defaults to false
io.fabric8.maven.socket.keepAlive = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.socket.keepAlive}
# SO_LINGER option for sockets, defaults to -1
io.fabric8.maven.socket.linger = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.socket.linger}
# SO_REUSEADDR option for sockets, defaults to false
io.fabric8.maven.socket.reuseAddress = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.socket.reuseAddress}
# TCP_NODELAY option for sockets, defaults to true
io.fabric8.maven.socket.tcpNoDelay = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.socket.tcpNoDelay}
# Configure buffer size for HTTP connections (output and input buffers), defaults to 8192 bytes
io.fabric8.maven.connection.bufferSize = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.connection.bufferSize}
# Number of connection retries after failure is detected in http client. httpclient uses default value "3"
io.fabric8.maven.connection.retryCount = ${profile:io.fabric8.agent/org.ops4j.pax.url.mvn.connection.retryCount}
